
#+================+#
#| My tmux config |#
#+================+#

# TODO
# {{{
#	1. battery charging status (oh-my-tmux)
#	2. adding tmux version dependency in README.md
#	3. tmux version problem
# }}}

# MAPPING
# {{{
# remap prefix from 'C-b' to 'C-a'
	unbind C-a
	set -g prefix C-b
	bind-key C-b send-prefix

# split panes using | and -
	unbind %
	bind '\' split-window -h
	unbind '"'
	bind - split-window -v

# reload config file (change file location to your the tmux.conf you want to use)
	bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# switch and resize panes
	unbind -n C-h
	unbind -n C-j
	unbind -n C-k
	unbind -n C-l
	bind -n M-h select-pane -L
	bind -n M-l select-pane -R
	bind -n M-k select-pane -U
	bind -n M-j select-pane -D

	bind -n C-M-H resize-pane -L
	bind -n C-M-J resize-pane -D
	bind -n C-M-K resize-pane -U
	bind -n C-M-L resize-pane -R

# swap tabs
	unbind Up
	unbind Down
	unbind Left
	unbind Right

	unbind C-Up
	unbind C-Down
	unbind C-Left
	unbind C-Right

	#r flag means repeat commands available without prefix key
	bind -r Left swap-window -t -1
	bind -r Right swap-window -t +1

# Start numberinat 1
	set -g base-index 1

# highlight window when it has new activity
	setw -g monitor-activity on
	set -g visual-activity on

# re-number windows when one is closed
	set -g renumber-windows on

# Enable mouse mode (tmux 2.1 and above)
	set -g mouse on

# don't rename windows automatically
	set -g allow-rename off

# set shell
	if-shell -b '[ "$(echo "$(type zsh | cut -c 5) == i" | bc)" = 1 ]' \
	"set -g default-shell /bin/zsh" "set -g default-shell $SHELL"
# }}}

# DESIGN CHANGES
# {{{
# panes
	set -g pane-border-style fg=black
	set -g pane-active-border-style fg=brightred

# Status bar design
	# status line
	set -g status-justify left
	set -g status-bg default
	set -g status-fg colour12
	set -g status-interval 1

	# messaging
	set -g message-style fg=black,bg=yellow
	set -g message-command-style fg=blue,bg=black

	# window mode
	setw -g mode-style bg=colour6,fg=colour0

	# window status
	setw -g window-status-format " #F#I:#W#F "
	setw -g window-status-current-format " #F#I:#W#F "
	setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
	setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
	setw -g window-status-current-style bg=colour0,fg=colour11,dim
	setw -g window-status-style bg=green,fg=black,reverse

	# Info on left (I don't have a session display for now)
	set -g status-left ''

	# loud or quiet?
	set-option -g visual-activity off
	set-option -g visual-bell off
	set-option -g visual-silence off
	set-window-option -g monitor-activity off
	set-option -g bell-action none

	set -g default-terminal "screen-256color"

	# The modes {
	setw -g clock-mode-colour colour135
	setw -g mode-style fg=colour196,bg=colour238,bold
# }

# The panes {
	set -g pane-border-style bg=colour235,fg=colour238
	set -g pane-active-border-style bg=colour236,fg=colour51
# }

# The statusbar {
	set -g status-position bottom
	set -g status-style bg=colour234,fg=colour137,dim
	set -g status-left ''
	set -g status-right '#[fg=colour245,bold]#H #[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S '
	set -g status-right-length 50
	set -g status-left-length 20

	setw -g window-status-current-style fg=colour81,bg=colour238,bold
	setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

	setw -g window-status-style fg=colour138,bg=colour235,none
	setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

	setw -g window-status-bell-style fg=colour255,bg=colour1,bold
# }

# The messages {
	set -g message-style fg=colour232,bg=colour166,bold
# }
# }}}

# tmp
# {{{
	set -g set-clipboard on

	# stop windows terminal cursor from blinking in vim(temporary)
	set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[6 q'

	# tmux copy mode with vim key-bindings
	set-window-option -g mode-keys vi
	bind-key -T copy-mode-vi v send-keys -X begin-selection
	bind-key -T copy-mode-vi y send-keys -X copy-selection

	# copy from remote server
	# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i'

	# copy tmux buffer to clipboard
	if-shell "uname | grep -i -q linux" \
	'bind P run-shell "tmux save-buffer - | xclip" \; display-message "tmux buffer copied to clipboard!"'
	if-shell "uname -r | grep -i -q microsoft" \
	'bind P run-shell "tmux save-buffer - | clip.exe" \; display-message "tmux buffer copied to clipboard!"'
	if-shell "uname | grep -i -q Darwin" \
	'bind P run-shell "tmux save-buffer - | pbcopy" \; display-message "tmux buffer copied to clipboard!"'
# }}}
