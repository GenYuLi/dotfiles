#|  _____                                        __ _         |#
#| |_   _| __ ___  _   ___  __   ___ ___  _ __  / _(_) __ _   |#
#|   | || '_ ` _ \| | | \ \/ /  / __/ _ \| '_ \| |_| |/ _` |  |#
#|   | || | | | | | |_| |>  <  | (_| (_) | | | |  _| | (_| |  |#
#|   |_||_| |_| |_|\__,_/_/\_\  \___\___/|_| |_|_| |_|\__, |  |#
#|                                                    |___/   |#

# TODO
# {{{
#	1. battery charging status (oh-my-tmux)
#	2. individual color variable
#	3. multi-level nested tmux
# }}}


# Settings
# {{{
	# set tmux version number
	#run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-8)"

	# window number indexing from 1
	set -g base-index 1

	# highlight window when it has new activity
	setw -g monitor-activity on
	set -g visual-activity off

	# re-number windows when one is closed
	set -g renumber-windows on

	# statusline
	set -g status-interval 1
	set -g status-position bottom
	set -g status-justify left

	# mouse mode (tmux 2.1 and above)
	if-shell "tmux -V | awk '{exit !($2 >= 2.1)}'" \
	"set -g mouse on"

	# don't rename windows automatically
	set -g allow-rename off

	# set default shell
	set -g default-shell $SHELL

	# vim in copy mode and emacs in status :)
	set -g mode-keys vi
  set -g status-keys emacs

	# enable terminl escape sequence
	set -g set-clipboard on

	# show true color, clipboard and proper cursor within tmux
  set -s default-terminal "screen-256color"
  set -sa terminal-overrides ",*-256color:Tc"                       # true color
  set -sa terminal-overrides ',*-256color:Ms=\E]52;%p1%s;%p2%s\007' # clipboard
  set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'           # cursor

	# enlarge history limit
	set -g history-limit 50000

	# update env whenever a session is created or attached
	set -g update-environment "SSH_TTY"

	# no more delay for escape
	set -s escape-time 0

  set -g focus-events on

  set -g display-time 2000

  setw -g aggressive-resize on
# }}}


# Mapping
# {{{
	# split panes using | and -
	bind '\' split-window -h -c '#{pane_current_path}'
	bind - split-window -v -c '#{pane_current_path}'

	# reload config file (change file location to your the tmux.conf you want to use)
	bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

	# resize panes
	bind -r H resize-pane -L 2
	bind -r J resize-pane -D 2
	bind -r K resize-pane -U 2
	bind -r L resize-pane -R 2

	# switch panes
	bind -r C-h select-pane -L
	bind -r C-j select-pane -D
	bind -r C-k select-pane -U
	bind -r C-l select-pane -R

	# navigate between vim && tmux
	bind -n M-h if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys M-h" "select-pane -L"
	bind -n M-j if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys M-j" "select-pane -D"
	bind -n M-k if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys M-k" "select-pane -U"
	bind -n M-l if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys M-l" "select-pane -R"

  # synchronize-panes
	bind C-s setw synchronize-panes

	# vim bindings
	if-shell "tmux -V | awk '{exit !($2 < 2.4)}'" \
	"bind -t vi-copy v begin-selection; \
	bind -t vi-copy V select-line; \
	bind -t vi-copy y copy-selection; \
	bind -t vi-copy Enter copy-pipe 'bash ~/dotfiles/scripts.sh yank'" \
	"bind -T copy-mode-vi v send -X begin-selection; \
	bind -T copy-mode-vi V send -X select-line; \
	bind -T copy-mode-vi y send -X copy-selection; \
	bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'bash ~/dotfiles/scripts.sh yank'"

	# copy tmux buffer to clipboard
	bind y run 'tmux saveb - | bash ~/dotfiles/scripts.sh yank && tmux display "copied!"'

	# tab like experience
	bind -n M-) switch-client -n
	bind -n M-( switch-client -p
	bind -n M-T new-session
	if-shell "tmux -V | awk '{exit !($2 >= 2.4)}'" \
	"bind -T off M-) switch-client -n; bind -T off M-( switch-client -p; bind -T off M-T new-session"

	# toggle on/off all key bindings && hide status bar
	if-shell "tmux -V | awk '{exit !($2 >= 2.4)}'" \
	"bind -T root F10 run 'tmux set prefix None && tmux set key-table off && tmux set status off && tmux refresh -S'; \
	bind -T off F10 run 'tmux set -u prefix && tmux set -u key-table && tmux set -u status && tmux refresh -S'"

	# kill-session and re-attach to next session
	if-shell "tmux -V | awk '{exit !($2 >= 2.4)}'" \
	"bind -T off M-K run-shell 'tmux display \'[closed]\'; tmux switch-client -n; tmux kill-session -t $(tmux display -p \'#S\') || tmux kill-session'"

	# swap-pane (targeted by pane number) with current pane
	bind S display-panes \; run "tmux command-prompt -p \"swap with pane:\"  \"swap-pane -s $(tmux display -p '#P') -t '%%'\""
	#bind S display-panes \; select-pane -m \; command-prompt -p "swap with pane:" "swap-pane -t '%%'" \; select-pane -M

	# join-pane (targeted by window number) from window
	bind j command-prompt -p "join pane from:" "join-pane -h -s '%%'"
	#bind j choose-window 'join-pane -h -s "%%"'

	# swap-window
	bind -r > swapw -t + \; if "tmux -V | awk '{exit !($2 >= 3.0)}'" "next"
	bind -r < swapw -t - \; if "tmux -V | awk '{exit !($2 >= 3.0)}'" "prev"

	# attach current session working directory to current directory
	bind a attach-session -t . -c '#{pane_current_path}' \; display 'working directory: #{pane_current_path}'

  # sort session by name
  bind s choose-tree -s -O name

  bind h new-window "htop -d 1"
  bind t split-window "vim ~/todo.md"
# }}}


# Theme
# {{{
	# clock
	setw -g clock-mode-colour colour135

	# split pane border color
	if-shell "tmux -V | awk '{exit !($2 >= 2.9)}'" \
	"set -g pane-border-style fg=colour238,bg=colour235; \
	set -g pane-active-border-style fg=colour51,bg=colour236" \
	"set -g pane-border-fg colour240; \
	set -g pane-active-border-fg colour51"

	# messaging
	if-shell "tmux -V | awk '{exit !($2 >= 2.9)}'" \
	"set -g message-style fg=colour232,bg=colour166,bold; \
	set -g message-command-style fg=blue,bg=black" \
	"set -g message-fg colour232; set -g message-bg colour166; \
	set -g message-command-fg blue; set -g message-command-bg black"

	# statusline
	if-shell "tmux -V | awk '{exit !($2 >= 2.9)}'" \
	"set -g status-style bg=colour235,fg=colour137" \
	"set -g status-fg colour137; set -g status-bg colour235"

	# statusline --> info on right
	set -g status-left ''
	set -g status-right '#{prefix_highlight} #[fg=colour239][#S] #[fg=colour245,bold]#H #[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S '
	set -g status-right-length 50
	set -g status-left-length 20

	# current window theme
	if-shell "tmux -V | awk '{exit !($2 >= 2.9)}'" \
	"set -g window-status-current-style fg=colour81,bg=colour238,bold" \
	"set -g window-status-current-fg colour81; \
	set -g window-status-current-bg colour238; \
	set -g window-status-current-attr bold"
	set -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

	# other window theme
	if-shell "tmux -V | awk '{exit !($2 >= 2.9)}'" \
	"set -g window-status-style fg=colour138,bg=colour235,none" \
	"set -g window-status-fg colour138; \
	set -g window-status-bg colour235; \
	set -g window-status-attr none"
	set -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

	# window status bell
	if-shell "tmux -V | awk '{exit !($2 >= 2.9)}'" \
	"set -g window-status-bell-style fg=colour255,bg=colour1,bold" \
	"set -g window-status-bell-fg colour255; \
	set -g window-status-bell-bg colour1; \
	set -g window-status-bell-attr bold"
# }}}


# Plugins
# {{{
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-logging'
set -g @logging_key 'M-P'
set -g @save-complete-history-key 'P'

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_fg 'black'
set -g @prefix_highlight_bg 'blue'

set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'

set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green'

run '~/.tmux/plugins/tpm/tpm'
# }}}


# NOTE
# {{{
#	0. nice tutorial: https://thoughtbot.com/upcase/search?query=tmux
#	1. `bind -n` if -n is specified, it is not necessary to use the prefix key
#	2. `bind -r` The -r flag indicates this key may repeat, see the repeat-time option.
#	3. `if-shell -b` means run in background
#	4. prefix <space> cycle layout between even-horizontal, even-vertical, main-horizontal, main-vertical, tiled
#	5. ":a -t . -c ~" to set working directory
# }}}
